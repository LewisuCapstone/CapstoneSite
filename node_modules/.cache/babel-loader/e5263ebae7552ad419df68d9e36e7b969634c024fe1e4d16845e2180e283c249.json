{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\School\\\\Lewis\\\\Software Systems Capstone CPSC-49200-003\\\\Community Charity App\\\\my-app\\\\src\\\\CharityForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './styles.css';\nimport CharityUserDataService from \"./services/charityuser.service\";\nimport { withRouter } from './common/with-router';\n\n/*This form includes the fields specified in Discord, with the email field as the username. \r\nIt also includes basic validation for required fields. The handleSubmit function \r\nlogs the form data to the console for demonstration purposes, but we can replace it \r\nwith our own code to submit the data to our server or API. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CharityForm() {\n  _s();\n  const [charityName, setCharityName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = {\n      charityName,\n      email,\n      password,\n      city,\n      state,\n      zipCode,\n      phone,\n      description\n    };\n    console.log(formData); // We can replace this with our own code to submit the form data to our server or API.\n    CharityUserDataService.create(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"charityName\",\n      children: \"Charity Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"charityName\",\n      value: charityName,\n      onChange: event => setCharityName(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email (Username):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city\",\n      children: \"City:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"city\",\n      value: city,\n      onChange: event => setCity(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"state\",\n      children: \"State:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"state\",\n      value: state,\n      onChange: event => setState(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"zipCode\",\n      children: \"Zip Code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"zipCode\",\n      value: zipCode,\n      onChange: event => setZipCode(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"phone\",\n      children: \"Phone:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"phone\",\n      value: phone,\n      onChange: event => setPhone(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"description\",\n      value: description,\n      onChange: event => setDescription(event.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\"\n      //</form>onClick={console.log(formData)}\n      ,\n      children: \"Create Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CharityForm, \"dbNf9ZMibkyidBDc15dko2DAKv8=\");\n_c = CharityForm;\nexport default CharityForm;\nvar _c;\n$RefreshReg$(_c, \"CharityForm\");","map":{"version":3,"names":["React","useState","CharityUserDataService","withRouter","CharityForm","charityName","setCharityName","email","setEmail","password","setPassword","city","setCity","state","setState","zipCode","setZipCode","phone","setPhone","description","setDescription","handleSubmit","event","preventDefault","formData","console","log","create","target","value"],"sources":["D:/Documents/School/Lewis/Software Systems Capstone CPSC-49200-003/Community Charity App/my-app/src/CharityForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './styles.css';\r\nimport CharityUserDataService from \"./services/charityuser.service\";\r\nimport { withRouter } from './common/with-router';\r\n\r\n/*This form includes the fields specified in Discord, with the email field as the username. \r\nIt also includes basic validation for required fields. The handleSubmit function \r\nlogs the form data to the console for demonstration purposes, but we can replace it \r\nwith our own code to submit the data to our server or API. */\r\n\r\nexport function CharityForm() {\r\n  const [charityName, setCharityName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      charityName,\r\n      email,\r\n      password,\r\n      city,\r\n      state,\r\n      zipCode,\r\n      phone,\r\n      description\r\n    };\r\n    console.log(formData); // We can replace this with our own code to submit the form data to our server or API.\r\n    CharityUserDataService.create(formData);\r\n  };\r\n\r\n  return (\r\n  \r\n\t\r\n\t\r\n    <form onSubmit={handleSubmit}>\r\n\t\r\n      <label htmlFor=\"charityName\">Charity Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"charityName\"\r\n        value={charityName}\r\n        onChange={(event) => setCharityName(event.target.value)}\r\n        required\r\n      />\r\n\t\r\n\t  \r\n\r\n      <label htmlFor=\"email\">Email (Username):</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        value={email}\r\n        onChange={(event) => setEmail(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"city\">City:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"city\"\r\n        value={city}\r\n        onChange={(event) => setCity(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"state\">State:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"state\"\r\n        value={state}\r\n        onChange={(event) => setState(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"zipCode\">Zip Code:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"zipCode\"\r\n        value={zipCode}\r\n        onChange={(event) => setZipCode(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"phone\">Phone:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"phone\"\r\n        value={phone}\r\n        onChange={(event) => setPhone(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <label htmlFor=\"description\">Description:</label>\r\n      <textarea\r\n        id=\"description\"\r\n        value={description}\r\n        onChange={(event) => setDescription(event.target.value)}\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\"\r\n      //</form>onClick={console.log(formData)}\r\n      >Create Account</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default CharityForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}